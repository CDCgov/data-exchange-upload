name: "Tus Pre-Create Hook Build and Deploy"

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - tus/file-hooks/metadata-verify/**

jobs:
  unit-test:
    name: Unit Test
    runs-on: [self-hosted, python3]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Run Unit Tests
        working-directory: tus/file-hooks/metadata-verify
        run: python3 -m unittest discover -v test
  build-with-artifact:
    name: Build - With Artifact
    needs: unit-test
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: tus/file-hooks/metadata-verify
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Build
        run: |
          ./podman-build-pre-create-bin.sh
      - name: Get listing
        run: ls -lh .
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: pre-create-bin
          path: ./tus/file-hooks/metadata-verify/pre-create-bin
          retention-days: 7
  publish:
    name: Publish artifacts to ImageHub
    needs: build-with-artifact
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: pre-create-bin
          path: tus/file-hooks/metadata-verify
      - name: Zip files
        working-directory: tus/file-hooks/metadata-verify
        run: |
          $GITHUB_SHA_SHORT=(git rev-parse --short "$GITHUB_SHA") 
          $FILE_NAME="tus_hooks_${GITHUB_SHA_SHORT}.zip"
          zip $FILE_NAME pre-create pre-create-bin allowed_destination_and_events.json ndlp-ri-meta-definition.json 
          curl -v -u ${{ secret.IMAGEHUB_USERNAME }}:${{ secret.IMAGEHUB_PASSWORD } --upload-file $FILE_NAME http://imagehub.cdc.gov/repository/<repo_to_publish>
  deploy:
    name: Upload to Blob Container
    needs: build-with-artifact
    runs-on: [self-hosted, python3]
    env:
      STORAGE_ACCOUNT_NAME: ocioededataexchangedev
      STORAGE_ACCOUNT_KEY: ${{ secrets.STORAGE_ACCOUNT_KEY }}
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: pre-create-bin
      - run: ls -lh .
      - run: ./tus/file-hooks/metadata-verify/upload-to-blob-container.sh $STORAGE_ACCOUNT_NAME $STORAGE_ACCOUNT_KEY
