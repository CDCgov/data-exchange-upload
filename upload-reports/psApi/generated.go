// Code generated by github.com/Khan/genqlient, DO NOT EDIT.

package psApi

import (
	"context"

	"github.com/Khan/genqlient/graphql"
)

// GetUploadStatsGetUploadStats includes the requested fields of the GraphQL type UploadStats.
// The GraphQL type's documentation follows.
//
// Collection of various uploads statistics
type GetUploadStatsGetUploadStats struct {
	// Number of uploads that have been completed.  This means, not only did the upload start, but according to the upload status reports we have received 100% of the expected chunks.
	CompletedUploadsCount int64 `json:"completedUploadsCount"`
	// Provides a list of all the uploads that are pending. This means, the upload started, but according to the upload status reports we did not receive 100% of the expected chunks.
	PendingUploads GetUploadStatsGetUploadStatsPendingUploadsPendingUploadCounts `json:"pendingUploads"`
	// Provides a list of all the uploads that have not been delivered. This means, the upload started, but according to the upload status reports we did not receive 100% of the expected chunks.
	UndeliveredUploads GetUploadStatsGetUploadStatsUndeliveredUploadsUndeliveredUploadCounts `json:"undeliveredUploads"`
}

// GetCompletedUploadsCount returns GetUploadStatsGetUploadStats.CompletedUploadsCount, and is useful for accessing the field via an interface.
func (v *GetUploadStatsGetUploadStats) GetCompletedUploadsCount() int64 {
	return v.CompletedUploadsCount
}

// GetPendingUploads returns GetUploadStatsGetUploadStats.PendingUploads, and is useful for accessing the field via an interface.
func (v *GetUploadStatsGetUploadStats) GetPendingUploads() GetUploadStatsGetUploadStatsPendingUploadsPendingUploadCounts {
	return v.PendingUploads
}

// GetUndeliveredUploads returns GetUploadStatsGetUploadStats.UndeliveredUploads, and is useful for accessing the field via an interface.
func (v *GetUploadStatsGetUploadStats) GetUndeliveredUploads() GetUploadStatsGetUploadStatsUndeliveredUploadsUndeliveredUploadCounts {
	return v.UndeliveredUploads
}

// GetUploadStatsGetUploadStatsPendingUploadsPendingUploadCounts includes the requested fields of the GraphQL type PendingUploadCounts.
// The GraphQL type's documentation follows.
//
// Collection of undelivered uploads found
type GetUploadStatsGetUploadStatsPendingUploadsPendingUploadCounts struct {
	// Total number of undelivered uploads.
	TotalCount int64 `json:"totalCount"`
	// Provides a list of all the uploads that have not been delivered. This means, the upload started, but according to the upload status reports we did not receive 100% of the expected chunks.
	PendingUploads []GetUploadStatsGetUploadStatsPendingUploadsPendingUploadCountsPendingUploadsUndeliveredUpload `json:"pendingUploads"`
}

// GetTotalCount returns GetUploadStatsGetUploadStatsPendingUploadsPendingUploadCounts.TotalCount, and is useful for accessing the field via an interface.
func (v *GetUploadStatsGetUploadStatsPendingUploadsPendingUploadCounts) GetTotalCount() int64 {
	return v.TotalCount
}

// GetPendingUploads returns GetUploadStatsGetUploadStatsPendingUploadsPendingUploadCounts.PendingUploads, and is useful for accessing the field via an interface.
func (v *GetUploadStatsGetUploadStatsPendingUploadsPendingUploadCounts) GetPendingUploads() []GetUploadStatsGetUploadStatsPendingUploadsPendingUploadCountsPendingUploadsUndeliveredUpload {
	return v.PendingUploads
}

// GetUploadStatsGetUploadStatsPendingUploadsPendingUploadCountsPendingUploadsUndeliveredUpload includes the requested fields of the GraphQL type UndeliveredUpload.
// The GraphQL type's documentation follows.
//
// Collection of undelivered found
type GetUploadStatsGetUploadStatsPendingUploadsPendingUploadCountsPendingUploadsUndeliveredUpload struct {
	// Filename of the file that is not delivered.
	Filename string `json:"filename"`
	// UploadId of the file that is not delivered.
	UploadId string `json:"uploadId"`
}

// GetFilename returns GetUploadStatsGetUploadStatsPendingUploadsPendingUploadCountsPendingUploadsUndeliveredUpload.Filename, and is useful for accessing the field via an interface.
func (v *GetUploadStatsGetUploadStatsPendingUploadsPendingUploadCountsPendingUploadsUndeliveredUpload) GetFilename() string {
	return v.Filename
}

// GetUploadId returns GetUploadStatsGetUploadStatsPendingUploadsPendingUploadCountsPendingUploadsUndeliveredUpload.UploadId, and is useful for accessing the field via an interface.
func (v *GetUploadStatsGetUploadStatsPendingUploadsPendingUploadCountsPendingUploadsUndeliveredUpload) GetUploadId() string {
	return v.UploadId
}

// GetUploadStatsGetUploadStatsUndeliveredUploadsUndeliveredUploadCounts includes the requested fields of the GraphQL type UndeliveredUploadCounts.
// The GraphQL type's documentation follows.
//
// Collection of undelivered uploads found
type GetUploadStatsGetUploadStatsUndeliveredUploadsUndeliveredUploadCounts struct {
	// Total number of undelivered uploads.
	TotalCount int64 `json:"totalCount"`
	// Provides a list of all the uploads that have not been delivered. This means, the upload started, but according to the upload status reports we did not receive 100% of the expected chunks.
	UndeliveredUploads []GetUploadStatsGetUploadStatsUndeliveredUploadsUndeliveredUploadCountsUndeliveredUploadsUndeliveredUpload `json:"undeliveredUploads"`
}

// GetTotalCount returns GetUploadStatsGetUploadStatsUndeliveredUploadsUndeliveredUploadCounts.TotalCount, and is useful for accessing the field via an interface.
func (v *GetUploadStatsGetUploadStatsUndeliveredUploadsUndeliveredUploadCounts) GetTotalCount() int64 {
	return v.TotalCount
}

// GetUndeliveredUploads returns GetUploadStatsGetUploadStatsUndeliveredUploadsUndeliveredUploadCounts.UndeliveredUploads, and is useful for accessing the field via an interface.
func (v *GetUploadStatsGetUploadStatsUndeliveredUploadsUndeliveredUploadCounts) GetUndeliveredUploads() []GetUploadStatsGetUploadStatsUndeliveredUploadsUndeliveredUploadCountsUndeliveredUploadsUndeliveredUpload {
	return v.UndeliveredUploads
}

// GetUploadStatsGetUploadStatsUndeliveredUploadsUndeliveredUploadCountsUndeliveredUploadsUndeliveredUpload includes the requested fields of the GraphQL type UndeliveredUpload.
// The GraphQL type's documentation follows.
//
// Collection of undelivered found
type GetUploadStatsGetUploadStatsUndeliveredUploadsUndeliveredUploadCountsUndeliveredUploadsUndeliveredUpload struct {
	// Filename of the file that is not delivered.
	Filename string `json:"filename"`
	// UploadId of the file that is not delivered.
	UploadId string `json:"uploadId"`
}

// GetFilename returns GetUploadStatsGetUploadStatsUndeliveredUploadsUndeliveredUploadCountsUndeliveredUploadsUndeliveredUpload.Filename, and is useful for accessing the field via an interface.
func (v *GetUploadStatsGetUploadStatsUndeliveredUploadsUndeliveredUploadCountsUndeliveredUploadsUndeliveredUpload) GetFilename() string {
	return v.Filename
}

// GetUploadId returns GetUploadStatsGetUploadStatsUndeliveredUploadsUndeliveredUploadCountsUndeliveredUploadsUndeliveredUpload.UploadId, and is useful for accessing the field via an interface.
func (v *GetUploadStatsGetUploadStatsUndeliveredUploadsUndeliveredUploadCountsUndeliveredUploadsUndeliveredUpload) GetUploadId() string {
	return v.UploadId
}

// GetUploadStatsResponse is returned by GetUploadStats on success.
type GetUploadStatsResponse struct {
	// Return various uploads statistics
	GetUploadStats GetUploadStatsGetUploadStats `json:"getUploadStats"`
}

// GetGetUploadStats returns GetUploadStatsResponse.GetUploadStats, and is useful for accessing the field via an interface.
func (v *GetUploadStatsResponse) GetGetUploadStats() GetUploadStatsGetUploadStats {
	return v.GetUploadStats
}

// __GetUploadStatsInput is used internally by genqlient
type __GetUploadStatsInput struct {
	Datastream string `json:"datastream"`
	Route      string `json:"route"`
	DateStart  string `json:"dateStart"`
	DateEnd    string `json:"dateEnd"`
}

// GetDatastream returns __GetUploadStatsInput.Datastream, and is useful for accessing the field via an interface.
func (v *__GetUploadStatsInput) GetDatastream() string { return v.Datastream }

// GetRoute returns __GetUploadStatsInput.Route, and is useful for accessing the field via an interface.
func (v *__GetUploadStatsInput) GetRoute() string { return v.Route }

// GetDateStart returns __GetUploadStatsInput.DateStart, and is useful for accessing the field via an interface.
func (v *__GetUploadStatsInput) GetDateStart() string { return v.DateStart }

// GetDateEnd returns __GetUploadStatsInput.DateEnd, and is useful for accessing the field via an interface.
func (v *__GetUploadStatsInput) GetDateEnd() string { return v.DateEnd }

// The query or mutation executed by GetUploadStats.
const GetUploadStats_Operation = `
query GetUploadStats ($datastream: String!, $route: String!, $dateStart: String, $dateEnd: String) {
	getUploadStats(dataStreamId: $datastream, dataStreamRoute: $route, dateStart: $dateStart, dateEnd: $dateEnd) {
		completedUploadsCount
		pendingUploads {
			totalCount
			pendingUploads {
				filename
				uploadId
			}
		}
		undeliveredUploads {
			totalCount
			undeliveredUploads {
				filename
				uploadId
			}
		}
	}
}
`

func GetUploadStats(
	ctx_ context.Context,
	client_ graphql.Client,
	datastream string,
	route string,
	dateStart string,
	dateEnd string,
) (*GetUploadStatsResponse, error) {
	req_ := &graphql.Request{
		OpName: "GetUploadStats",
		Query:  GetUploadStats_Operation,
		Variables: &__GetUploadStatsInput{
			Datastream: datastream,
			Route:      route,
			DateStart:  dateStart,
			DateEnd:    dateEnd,
		},
	}
	var err_ error

	var data_ GetUploadStatsResponse
	resp_ := &graphql.Response{Data: &data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return &data_, err_
}
